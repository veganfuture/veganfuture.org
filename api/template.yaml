AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Domain:
    Type: String
    Description: Apex domain you own in Route 53
    Default: veganfuture.org

Globals:
  Function:
    Timeout: 10  # seconds

Resources:

  # SES v2 Email Identity
  SESEmailIdentity:
    Type: AWS::SES::EmailIdentity
    Properties:
      EmailIdentity: !Ref Domain

  # Route 53 RecordSetGroup for DKIM CNAMEs
  SESDkimRecords:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneName: !Sub '${Domain}.'
      RecordSets:
        - Name: !GetAtt SESEmailIdentity.DkimDNSTokenName1
          Type: CNAME
          TTL: 300
          ResourceRecords:
            - !GetAtt SESEmailIdentity.DkimDNSTokenValue1
        - Name: !GetAtt SESEmailIdentity.DkimDNSTokenName2
          Type: CNAME
          TTL: 300
          ResourceRecords:
            - !GetAtt SESEmailIdentity.DkimDNSTokenValue2
        - Name: !GetAtt SESEmailIdentity.DkimDNSTokenName3
          Type: CNAME
          TTL: 300
          ResourceRecords:
            - !GetAtt SESEmailIdentity.DkimDNSTokenValue3

  RAAFSignupsTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Retain
    UpdateReplacePolicy: Retain
    Properties:
      TableName: RAAFSignups
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: email
          AttributeType: S
        - AttributeName: token
          AttributeType: S
      KeySchema:
        - AttributeName: email
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: token-index
          KeySchema:
            - AttributeName: token
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  # HTTP API with CORS for two origins
  RAAFHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      CorsConfiguration:
        AllowOrigins:
          - https://veganfuture.org
          - http://localhost:3000
        AllowMethods:
          - OPTIONS
          - GET
          - POST
        AllowHeaders:
          - Content-Type

  # Lambda + POST /signup_raaf on the HTTP API
  RAAFSignupFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: SignupRAAFHandler
      Runtime: nodejs18.x
      Handler: app.handler
      CodeUri: signup_raaf/
      Environment:
        Variables:
          TABLE_NAME:       !Ref RAAFSignupsTable
          SES_SOURCE_EMAIL: !Sub "noreply@${Domain}"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref RAAFSignupsTable
        - SESCrudPolicy:
            IdentityName: !Ref Domain 
        - Statement:
            - Effect: Allow
              Action:
                - ses:SendEmail
                - ses:SendRawEmail
              Resource: !Sub "arn:aws:ses:us-east-1:${AWS::AccountId}:identity/${Domain}"
      Events:
        SignupApi:
          Type: HttpApi
          Properties:
            ApiId: !Ref RAAFHttpApi
            Path: /signup_raaf
            Method: post


  RAAFUnsubscribeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: UnsubscribeRAAFHandler
      Runtime: nodejs18.x
      Handler: app.handler
      CodeUri: unsubscribe_raaf/
      Environment:
        Variables:
          TABLE_NAME: !Ref RAAFSignupsTable
          TOKEN_GSI:  token-index
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref RAAFSignupsTable
      Events:
        UnsubGet:
          Type: HttpApi
          Properties:
            ApiId: !Ref RAAFHttpApi
            Path: /unsubscribe_raaf
            Method: get
        UnsubPost:
          Type: HttpApi
          Properties:
            ApiId: !Ref RAAFHttpApi
            Path: /unsubscribe_raaf
            Method: post

Outputs:
  SignupApiUrl:
    Description: "Signup POST endpoint"
    Value: !GetAtt RAAFHttpApi.ApiEndpoint
  UnsubscribeBaseUrl:
    Description: "Base URL; use /unsubscribe_raaf?token=... in emails"
    Value: !GetAtt RAAFHttpApi.ApiEndpoint
